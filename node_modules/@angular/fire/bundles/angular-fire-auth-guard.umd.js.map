{"version":3,"file":"angular-fire-auth-guard.umd.js","sources":["../../../src/auth-guard/auth-guard.ts","../../../src/auth-guard/auth-guard.module.ts","../../../src/auth-guard/angular-fire-auth-guard.ts"],"names":["map","take","Injectable","Router","AngularFireAuth","of","switchMap","pipe","NgModule"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of, pipe, UnaryFunction } from 'rxjs';\nimport { map, switchMap, take } from 'rxjs/operators';\nimport firebase from 'firebase/app';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\nexport type AuthPipeGenerator = (next: ActivatedRouteSnapshot, state: RouterStateSnapshot) => AuthPipe;\nexport type AuthPipe = UnaryFunction<Observable<firebase.User|null>, Observable<boolean|string|any[]>>;\n\nexport const loggedIn: AuthPipe = map(user => !!user);\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFireAuthGuard implements CanActivate {\n\n  constructor(private router: Router, private auth: AngularFireAuth) {}\n\n  canActivate = (next: ActivatedRouteSnapshot, state: RouterStateSnapshot) => {\n    const authPipeFactory = next.data.authGuardPipe as AuthPipeGenerator || (() => loggedIn);\n    return this.auth.user.pipe(\n      take(1),\n      authPipeFactory(next, state),\n      map(can => {\n        if (typeof can === 'boolean') {\n          return can;\n        } else if (Array.isArray(can)) {\n          return this.router.createUrlTree(can);\n        } else {\n          // TODO(EdricChan03): Add tests\n          return this.router.parseUrl(can);\n        }\n      })\n    );\n  }\n\n}\n\nexport const canActivate = (pipe: AuthPipeGenerator) => ({\n  canActivate: [ AngularFireAuthGuard ], data: { authGuardPipe: pipe }\n});\n\n\nexport const isNotAnonymous: AuthPipe = map(user => !!user && !user.isAnonymous);\nexport const idTokenResult = switchMap((user: firebase.User|null) => user ? user.getIdTokenResult() : of(null));\nexport const emailVerified: AuthPipe = map(user => !!user && user.emailVerified);\nexport const customClaims = pipe(idTokenResult, map(idTokenResult => idTokenResult ? idTokenResult.claims : []));\nexport const hasCustomClaim: (claim: string) => AuthPipe =\n  (claim) => pipe(customClaims, map(claims =>  claims.hasOwnProperty(claim)));\nexport const redirectUnauthorizedTo: (redirect: string|any[]) => AuthPipe =\n  (redirect) => pipe(loggedIn, map(loggedIn => loggedIn || redirect));\nexport const redirectLoggedInTo: (redirect: string|any[]) => AuthPipe =\n  (redirect) => pipe(loggedIn, map(loggedIn => loggedIn && redirect || true));\n","import { NgModule } from '@angular/core';\nimport { AngularFireAuthGuard } from './auth-guard';\n\n@NgModule({\n  providers: [ AngularFireAuthGuard ]\n})\nexport class AngularFireAuthGuardModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}